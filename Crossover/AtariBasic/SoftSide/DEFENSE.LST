;
; Atari BASIC
; 'DEFENSE'
; AUTHOR: Greg Schroeder
; © 1982 SoftSide
;
; Softside Vol 5-05 Feb 1982
;

10 GOSUB 10000

; Dimension variables.

15 DIM A(N1,40),B(N3),C(N3),D(N3),E(N3),F(N3),SH(N1),SC(N1),A$(21),H$(N5),R(N3),AL(N1):SC(N0)=N0:SC(N0)=N0

; Set arrays to zero.

20 FOR I=N0 TO N3:B(I)=M1:C(I)=N0:D(I)=N0:E(I)=N0:R(I)=N0:NEXT I

; Find the highest score.

25 I=SC(N0)*(SC(N0)>SC(N1))+SC(N1)*(SC(N1)>SC(N0)):HSC=HSC*(HSC>I)+I*(I>HSC)


; Place aliens for two players in moon's surface
; variable.

30 FOR I=N0 TO N1:FOR J=N0 TO 19:A(I,J)=INT(RND(N0)*16):NEXT J:NEXT I

; Define other variables for both players.

40 SH(N0)=N3:SH(N1)=N3:SC(N0)=N0:SC(N1)=N0:AL(N0)=20:AL(N1)=20:F(N0)=20:F(N1)=20:F(N2)=N0:F(N3)=N0:XC=N0

; Jump to "get ready" subroutine.

50 GOSUB 6000

; Lines 100-150: Main loop.
; Increment alien on screen counter.

100 TT=TT+N1:IF TT=N3 THEN TT=N0

; Move moon's surface contained in A$. Use H$
; as temporary storage.

105 IF GS>N1 THEN H$=A$(N1,GS):A$=A$(GS+N1,20):A$(LEN(A$)+N1)=H$:POSITION N0,20:? #N6;A$;

; Lines 110-140: Move Ship.
; Check If joystick moved.

110 S=STICK(PL):IF S=15 THEN 150

; Check joystick to move ship up.

120 Y1=Y:IF S/N2=INT(S/N2) AND Y>N6 THEN Y=Y-N1

; Check joystick to move ship down. See If ship
; hit ground.

125 IF (S=N5 OR S=9 OR S=13) THEN Y=Y+N1:IF Y=20 THEN GOTO 3000

; Erase and reprint redefined ship character.

130 POSITION N1,Y1:? #N6;"  ";:POSITION N1,Y:? #N6;"";

; Check joystick to move ship faster.

135 IF S>N4 AND S<N8 AND GS<N2 THEN GS=GS+0.05

; Check joystick to move ship slower.

140 IF S>N8 AND S<12 THEN GS=GS-0.05:IF GS<N0 THEN GS=N0

; Lines 150-170: Fire Laser.
; Check If trigger released.

150 IF STRIG(PL)=N1 THEN SL=N0:GOTO 200

; If trigger stili pressed, then branch to alien
; movement.

155 IF SL=N1 THEN 200

; Print redefined text graphics laser. Make some
; noise. Check If laser hit alien(s).

160 SOUND N1,20,N4,15:POSITION N3,Y:? #N6;"";:FOR I=N0 TO N2:IF B(I)>N2 AND INT(C(I))=Y THEN 4000
161 . LINE 160: 16 <CTRL> ''
162 NEXT I

; Erase laser. Turn off sound. Set trigger pressed
; variable.

165 POSITION N3,Y:? #N6;"                 ";:SOUND N1,N0,N0,N0:SOUND N2,N0,N0,N0:SL=N1

; Check If all aliens are gone.

170 IF AL(PL)<N1 THEN 4100

; Lines 200-300: Alien Movement.
; Increment moon surface counter.

200 XC=XC+N1:IF XC=F(PL)+N1 THEN XC=N1

; Move aliens' position in array.

210 IF A(PL,XC)>-5 THEN A(PL,XC)=A(PL,XC)-(GS):IF A(PL,XC)<=N0 THEN 1000

; Check if variable contains no alien.

220 IF B(TT)=M1 THEN 300

; Erase alien. Move alien along X axis. Check if
; it is off-screen.

230 POSITION INT(B(TT)),INT(C(TT)):? #N6;" ";:B(TT)=B(TT)-GS-0.5:IF B(TT)<N0 THEN B(TT)=M1:A(PL,R(TT))=15:GOTO 300

; Check if alien is smiling blob and branch to
; different movement routine.

240 IF E(TT)>N4 THEN 2000

; Check if alien is off-screen after moving along
; Y axls.

250 C(TT)=C(TT)+D(TT):IF C(TT)<N6 OR C(TT)>19 THEN C(TT)=C(TT)-D(TT):D(TT)=-D(TT)

; Check If alien hit you.

255 IF INT(B(TT))>=N0 AND INT(B(TT))<=N2 THEN IF INT(C(TT))=Y THEN 3000

; Print specific redefined alien character.

260 POSITION INT(B(TT)),INT(C(TT)):GOSUB 260+E(TT)*N5:GOTO 300
265 ? #N6;"Z";:RETURN
270 ? #N6;"z";:RETURN
275 ? #N6;"";:RETURN
280 ? #N6;"";:RETURN
285 ? #N6;"";:RETURN
290 ? #N6;"t";:RETURN

; Return to start of main loop.

300 GOTO 100

; Lines 1000-2010: Set Up New Alien
; Find empty alien variable: If none, then restart
; alien at end of moon's surface.

1000 FOR I=N0 TO N2:IF B(I)=M1 THEN 1010
1005 NEXT I:A(PL,XC)=15:GOTO 220

; Set Y value for alien. Set alien's movement.

1010 C(I)=INT(RND(N0)*12)+7:D(I)=RND(N0)+0.1-1.5*(RND(N0)<0.5)

; Pick alien type. Remember which surface alien
; it is. If alien is a smiling blob, then start X
; position at mid-screen.

1020 E(I)=INT(RND(N0)*N6)+N1:R(I)=XC:A(PL,XC)=-10:B(I)=17:IF E(I)>N4 THEN B(I)=11
1025 GOTO 220

; Move smiling blob along Y axis.

2000 IF C(TT)<Y THEN D(TT)=N1:GOTO 250
2010 IF C(TT)>=Y THEN D(TT)=M1:GOTO 250

; Lines 3000-3070: You've Been Hit.
; Clear playing field.

3000 FOR I=N6 TO 19:POSITION N0,I:? #N6;"                    ";:NEXT I
3010 FOR I=N0 TO N2:IF B(I)>N0 THEN A(PL,R(I))=15:B(I)=M1

; Turn off sound.

3015 NEXT I:FOR I=N0 TO N3:SOUND I,N0,N0,N0:NEXT I

; Print redefined ship character. Brighten
; ship In red.

3020 POSITION N1,Y:? #N6;"";:FOR I=N2 TO N8 STEP 0.1:SETCOLOR N2,N4,I:NEXT I

; Make explosion sound, first explosion.
; Initialize explosion loop.

3025 SOUND N0,20,N8,15:POSITION N1,Y:? #N6;"";:FOR I=15 TO N0 STEP -0.2

; Make explosion sounds.

3030 SOUND N0,20,N8,I:SOUND N1,75,N8,I+N1:SOUND N2,175,N8,I+N3:SOUND N3,255,N8,I+N5

; Print explosion steps when ready.

3040 IF I=12 THEN POSITION N0,Y-N1:? #N6;" ";:POSITION N0,Y:? #N6;"::";:POSITION N1,Y+N1:? #N6;"";
3045 IF I=N8 THEN POSITION N0,Y-N1:? #N6;"";:POSITION N0,Y:? #N6;"++";:POSITION N0,Y+N1:? #N6;"";
3050 IF I=N4 THEN POSITION N0,Y-N1:? #N6;" ";:POSITION N0,Y:? #N6;"++";:POSITION N1,Y+N1:? #N6;"";
3055 IF I=N1 THEN POSITION N0,Y-N1:? #N6;"    ";:POSITION N0,Y:? #N6;"    ";:POSITION N0,Y+N1:? #N6;"    ";

; Turn off sound. Erase ship.

3060 NEXT I:FOR I=N0 TO N3:SOUND I,N0,N0,N0:NEXT I:POSITION N1,Y:? #N6;"  ";

; Set ground speed to zero. Subtract ship
; from player. Print number of ships left.
; Check If all ships gone.

3062 GS=N0:SH(PL)=SH(PL)-N1:POSITION N3+12*PL,N4:? #N6;SH(PL);:IF SH(PL)<N1 THEN GOSUB 7000

; If there's another player, then change
; player variable.

3065 IF PP AND SH(N1-PL)>N0 THEN PL=N1-PL

; Jump to "get ready" routine. Jump to
; screen drawing.

3070 GOSUB 5000:FOR I=N1 TO 1000:NEXT I:GOSUB 6000:XC=N0:GOTO 100

; Lines 4000-4050: Destroy Aliens.
; Make some noise. Check if alien is smiling
; blob.

4000 SOUND N2,RND(N0)*200+50,N10,N10:POSITION INT(B(I)),INT(C(I)):? #N6;:IF E(I)>N4 THEN 4020

; Print score for drone. Add to total score.

4010 ? #N6;E(I)*N10;:SC(PL)=SC(PL)+E(I)*N10:GOTO 4030

; Print score for smiling blob. Add to total
; score.

4020 ? #N6;(E(I)-N4)*100;:SC(PL)=SC(PL)+(E(I)-N4)*100

; Clear alien variables. Print player's score.

4030 B(I)=M1:A(PL,R(I))=-5:POSITION N2,N3:? #N6;SC(N0);:IF PP THEN POSITION 14,N3:? #N6;SC(N1);

; Decrease the number of aliens in attack
; wave. Return to see if more hit.

4040 AL(PL)=AL(PL)-N1:POSITION N2,22:? #N6;"t=";AL(N0);" ";:IF PP THEN POSITION 12,22:? #N6;"=";AL(N1);" ";
4050 NEXT I:GOTO 165

; Lines 4100-4135: Attack Wave Destroyed.

; Clear screen. Restore ATARI® character
; set. Add to player's wave cleared total.
; Print message, make noise.

4100 GRAPHICS 17:POKE N756,224:F(PL+N2)=F(PL+N2)+N1:POSITION N8,N10:? #N6;"attack":? #N6;"  wave ";F(PL+N2);
4110 ? #N6;" destroyed":? #N6:SOUND N0,200,N10,N10:SOUND N1,201,N10,N10:SOUND N2,N0,N0,N0

; Print bonus message. (500 points for each
; remaining ship.) Add bonus to total score.

4120 ? #N6;"    ";SH(PL)*500:SC(PL)=SC(PL)+SH(PL)*500

; Check If extra ship Is awarded. Print
; message.

4123 IF F(PL+N2)/N4=INT(F(PL+N2)/N4) THEN SH(PL)=SH(PL)+N1:? #N6:? #N6;"    "

; Add more to next wave. Reset aliens on
; surface.

4125 AL(PL)=F(PL)+N5:F(PL)=F(PL)+N5:IF F(PL)>40 THEN F(PL)=40:AL(PL)=40

; Make sure wave doesn't go over 40 aliens.

4130 FOR J=N0 TO AL(PL)-N1:A(PL,J)=INT(RND(N0)*16):NEXT J

; Jump to screen drawing. Jump to main
; loop.

4135 FOR I=N1 TO 1500:NEXT I:GOSUB 6000:GOTO 100

; Lines 5000-5005: Get Ready

; Clear screen. Restore ATARI® character
; set. Print message.

5000 GRAPHICS 18:POKE N756,224:POSITION N4,N5:? #N6;"PLAYER   ";PL+N1
5005 POSITION N4,N6:? #N6;"":RETURN

; Lines 6000-6070: Draw Screen.
; Clear screen: Restore new character set.
; Turn off sound.

6000 GRAPHICS 17:POKE N756,ST/256:FOR X=N0 TO N3:SOUND X,N0,N0,N0:NEXT X

; Print messages for both players. (If only
; one player, then only player #1's
; messages.)

6020 POSITION N6,N0:? #N6;"":POSITION N3,N2:? #N6;"#1   #2":POSITION (18-LEN(STR$(HSC)))/N2,N1:? #N6;HSC;
6030 POSITION N2,N3:? #N6;SC(N0);:POSITION N3,N4:? #N6;SH(N0);
6040 IF PP THEN POSITION 14,N3:? #N6;SC(N1);:POSITION 15,N4:? #N6;SH(N1);
6045 POSITION N2,22:? #N6;"t=";AL(N0);:IF PP THEN POSITION 12,22:? #N6;"=";AL(N1);

; Print line made of redefined character.

6050 FOR I=N0 TO 19:POSITION I,N5:? #N6;"W";:NEXT I

; Assemble moon's surface picture in A$.

6060 FOR I=N1 TO 20:A$(I,I)="@":NEXT I:A$(N10,11)="UV":A$(N2,N3)="UV":A$(19,20)="UV"

; Print ground. Set ship position (Y) to mid-
; screen and print ship. Make rocket sound.

6070 POSITION N0,20:? #N6;A$;:Y=12:POSITION N1,Y:? #N6;"";:SOUND N0,75,N8,N4:RETURN

; Lines 7000-7050: Game Over.

; Restore ATARI® character set. Print game
; over and score.

7000 POKE N756,224:GRAPHICS 18:POSITION N5,N5:? #N6;" ";CHR$(PL+177);:POSITION N5,N6:? #N6;"game over";
7005 POSITION N4,N8:? #N6;" ";SC(PL);

; See If both players' games are over.

7010 FOR I=N1 TO 400:NEXT I:IF NOT SH(N0) AND NOT SH(PP) THEN 7050

; Return to main loop.

7020 RETURN

7050 FOR I=N1 TO 400:NEXT I:POP :GOSUB 11000:GOSUB 11100:GOTO 20

; Lines 10000-10070: Redefine Character Set.

; Set top of memory five pages down.
; Initialize graphics. Jump to title display
; routine.

10000 REA.N0,N1,N2,N3,N4,N5,N6,N8,N10,M1,N756:D.0,1,2,3,4,5,6,8,10,-1,756
10005 I=PEEK(105)-N5:POKE 106,I:GRAPHICS N0:GOSUB 11000

; Set start of new character set pointer.

10010 ST=(I+N1)*256

; Move ATARI® character set from ROM to
; top of RAM. Jump to number of players
; input.

10020 FOR X=N0 TO 1023:POKE ST+X,PEEK(57344+X):NEXT X:GOSUB 11100

; Redefine "X" character to be back half of
; ship and "Y" to be front half of ship. "Z"
; is a drone. "U" is CHR$(N6). " V" is CHR$(7).

10030 FOR X=N0 TO 23:READ A:POKE ST+448+X,A:NEXT X:FOR X=N0 TO 15:POKE ST+424+X,PEEK(ST+560+X):NEXT X

; "W" is CHR$(18).

10040 FOR X=N0 TO 7:POKE ST+440+X,PEEK(ST+656+X):NEXT X

; "T" is smiling blob.

10045 FOR X=N0 TO 7:READ A:POKE ST+416+X,A:NEXT X

; "@" is flat ground and laser character.

10050 FOR X=N0 TO N6:POKE ST+256+X,N0:NEXT X:POKE ST+263,255

; Initialize new character set.

10055 GRAPHICS N1:POKE N756,ST/256:RETURN

; DATA for redefined characters.

10060 DATA 0,0,0,0,30,15,7,7,0,0,0,0,0,192,252,255,0,8,28,62,127,42,20,34
10070 DATA 0,126,153,153,255,189,195,126

; Lines 11000-11050: Title Display.
; Suppress cursor. Print title and
; instructions.

11000 GRAPHICS 17:POKE 752,N1:POSITION 7,N0:? #N6;"":? #N6:? #N6:? #N6;"  evil aliens from"
11010 ? #N6;" beyond earth have   invaded the moon.":? #N6:? #N6
11020 ? #N6;"  YOUR MISSION IS    TO DESTROY AS MANY  ATTACKING WAVES OF  THOSE ALIENS BEFORE";
11030 ? #N6;" THEY LAUNCH THEIR   FLEETS TO CONQUER   THE EARTH.":? #N6:? #N6
11040 ? #N6;"  "
11050 RETURN

; Lines 11100-11120: Number of Players Input.

; OPEN keyboard. Print message.

11100 OPEN #N2,N4,N0,"K":POSITION N0,23:? #N6;"PUSH 1 OR 2 TO START";

; GET key pressed.
; Check if key "1" or "2" is pressed.
; Decide whether one- or two-player game.
; CLOSE keyboard.

11115 GET #N2,I:PP=I-49:IF PP<N0 OR PP>N1 THEN 11115
11116 CLOSE #N2

; Set player variable. Jump to "get ready"
; subroutine.

11120 PL=N0:GOSUB 5000:RETURN
