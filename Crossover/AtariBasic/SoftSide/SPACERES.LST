;
; Space Rescue
; by Matt Rutter
; ©1982 SoftSide
;
; Softside Vol 5-05 Feb 1982
;

10 GOSUB 1100:GOSUB 1000

; Initialize variables. Set
; character base register (POKE
; location 756) to beginning of altered
; character set, and display six
; people at the bottom of the screen.

15 D1=0:SC=0:SL=3
20 GRAPHICS 0:POKE 756,R:POKE 752,1:SETCOLOR 2,0,0:S=34:D=-1:P1=6:P2=0
25 FOR I=21 TO 23:POSITION 0,I:? "f";:POSITION 38,I:? "f";:NEXT I

; Draw the landing pad and put the
; meteors on the screen.

30 L=INT(23*RND(1)+5):POSITION L,21:? "":POSITION L-1,22:? "":POSITION L-2,23:? "";:B=0:G=0
40 FOR I=1 TO D1*10+30:POSITION RND(1)*35+1,RND(1)*15+3:? CHR$(20);:NEXT I:POSITION L,23:? SC;:POKE 77,0
45 FOR AZ=1 TO SL:SOUND 0,37,10,10:FOR W=1 TO 100:NEXT W:SOUND 0,0,0,0:NEXT AZ

; Move mother ship back and forth.

50 POSITION S,0:? "             ";:S=S+D
60 POSITION S,0:? "abc";:IF S<3 OR S>33 THEN D=-D
65 IF STRIG(0)=0 THEN 80
70 FOR W=1 TO 25:NEXT W:GOTO 50
80 POSITION S+2,2:? " ":FOR W=1 TO 50:NEXT W:POSITION S,2:? "   ":X=S+2:Y=1

; Check for player input.

100 U=0:X1=X:P=STICK(0):IF P<12 AND Y>1.5 THEN GOSUB 300
120 Y1=Y+1:P=STRIG(0):IF P=0 THEN Y1=Y+0.5

; Check for collision.

130 FOR I=X1-1 TO X1+1:LOCATE I,Y1,A:IF A=20 OR A=160 THEN 500
133 IF B=20 OR B=160 THEN 500
135 NEXT I

; Move ship and display flame if
; appropriate.

140 POSITION X-1,Y:? "   ":POSITION X,Y+1:? " ":X=X1:Y=Y1:POSITION X-1,Y:? "abc"
145 LOCATE X,Y+1,B:IF P=0 THEN POSITION X,Y+1:? "d":SOUND 1,20,8,15
147 IF P=1 THEN SOUND 1,0,0,0

; Check for successful landing.

150 IF X=L+1 AND INT(Y+0.5)=20 THEN POSITION X,Y+1:? CHR$(160):SC=SC+50:POSITION L,23:? SC;:GOTO 400
155 IF Y>20 THEN 500
160 GOTO 100

; Erase old meteors and display new
; ones.

200 X=L+1:Y=20:COLOR 32:FOR I=3 TO 18:PLOT 1,I:DRAWTO 37,I:NEXT I
205 FOR I=1 TO D1*15+40:POSITION RND(1)*35+1,RND(1)*15+3:? CHR$(20);:NEXT I:C=0
207 POSITION L,21:? "   "

; Make launching sound, check for
; input, and move ship up one space.

210 SOUND 0,5*Y+90,8,8:X1=X:Y1=Y:P=STICK(0):IF P<12 THEN GOSUB 300
220 C=C+1:IF C=3 THEN C=0:Y1=Y-1

; Check for collision.

225 FOR I=X1-1 TO X1+1:LOCATE I,Y1,A:IF A=20 THEN 500
227 NEXT I

; Move rocket and check for input.

230 POSITION X-1,Y:? "   ":POSITION X,Y+1:? " ";:X=X1:Y=Y1:POSITION X-1,Y:? "abc":POSITION X,Y+1:? "d";
240 IF STRIG(0)=0 AND G=0 AND Y>4 THEN GOSUB 340
250 IF G=1 THEN GOSUB 350
255 IF Y=1 THEN 270
260 GOTO 210

; Check for successful docking with
; mother ship.

270 IF X<>S+2 THEN 500
275 P2=P2+1
280 SOUND 0,0,0,0:POSITION S,2:? "  ":COLOR 32:FOR I=3 TO 23:PLOT 1,I:DRAWTO 37,I:NEXT I

; If all people are gone from the
; bottom of the screen, then increase
; difficulty level and branch to bonus
; routine.

285 IF P1=0 THEN P1=6:D1=D1+1:GOTO 650
290 GOTO 30


; Subroutine to move ship according
; to input.

300 IF P>8 AND P<12 AND X>2 THEN X1=X-1
310 IF P<8 AND X<36 THEN X1=X+1
320 RETURN

; Launch missile.

340 G=1:XM=X:YM=Y:FOR I=10 TO 100 STEP 10:SOUND 1,I,10,10:NEXT I:SOUND 1,0,0,0

; Move missile and check for collision
; with meteors.

350 POSITION XM,YM:? " ";:YM=YM-1
360 LOCATE XM,YM,A:IF A=20 THEN POSITION XM,YM:? " ";:G=0:SC=SC+20:POSITION L,23:? SC;:RETURN
370 POSITION XM,YM:? "":IF YM<4 THEN POSITION XM,YM:? " ":G=0
380 RETURN

; Successful landing routine. Wave
; arms of the next person and move
; him over to rocket.

400 SOUND 1,0,0,0:Y=27-P1:X=38:X1=34:X2=L+5:IF P1<4 THEN Y=24-P1:X=0:X1=1:X2=L-3
410 FOR I=1 TO 8:FOR J=101 TO 103:POSITION X,Y:? CHR$(J);:FOR W=1 TO 30:NEXT W:NEXT J
420 POSITION X1,Y:? "YAY!";:IF I/2=INT(I/2) THEN POSITION X1,Y:? "    ";
430 NEXT I:POSITION X,Y:? " ";
440 FOR I=X+SGN(X1-X) TO X2 STEP SGN(X2-X)
450 FOR J=101 TO 103 STEP 2:POSITION I,23:? CHR$(J);:FOR W=1 TO 20:NEXT W
455 SOUND 0,90,8,15:SOUND 0,0,0,0:NEXT J:POSITION I,23:? " ";:NEXT I
460 X=I+SGN(X1-X2):Y=23:FOR I=1 TO 2:X=X+SGN(L-X1):Y=Y-1
465 FOR J=101 TO 103 STEP 2:POSITION X,Y:? CHR$(J);:FOR W=1 TO 20:NEXT W:NEXT J:POSITION X,Y:? " ";:NEXT I
470 P1=P1-1:U=1:GOTO 200

; Explosion routine.

500 SOUND 0,0,0,0:SOUND 1,75,8,15
520 X1=X-2:X2=X+1:X0=X:XS=2:V0=15:V1=15:V2=15:POSITION X-1,Y:? "   ":POSITION X,Y+1:? " "
530 FOR I=Y TO 22:POSITION X1,I:? "ah";:POSITION X2,I:? "ic";:IF U=1 THEN POSITION X0,I:? "e";
540 SOUND 0,20,8,V0:SOUND 1,40,8,V1:SOUND 2,70,8,V2:V0=V0*0.7:V1=V1*0.75:V2=V2*0.78:XS=XS-0.2:IF XS<0 THEN XS=0
550 FOR W=1 TO 30:NEXT W:POSITION X1,I:? "  ";:POSITION X2,I:? "  ";:IF U=1 THEN POSITION X0,I:? " ";
560 X1=X1-XS:IF X1<1 THEN X1=36
570 X2=X2+XS:IF X2>36 THEN X2=1
580 NEXT I:FOR I=0 TO 3:SOUND I,0,0,0:NEXT I:SL=SL-1:IF SL=0 THEN 600
590 GOTO 280

; End of game. Print score and game-
; over message and wait for input.

600 GRAPHICS 0:POKE 752,1:POSITION 16,10:? "GAME OVER":POSITION 12,12:? "YOUR SCORE IS ";SC
610 POSITION 8,14:? "PUSH START TO PLAY AGAIN"
620 IF PEEK(53279)=6 THEN 15
630 GOTO 620

; Bonus routine. Awards 50 points for
; each person safely brought to
; mother ship.

650 FOR I=3 TO 23:PLOT 1,I:DRAWTO 37,I:NEXT I
660 POSITION 16,10:? "":POSITION 15,12:? "SCORE=";SC
670 FOR I=1 TO P2:POSITION 12+I*2,14:? "f":SC=SC+50:POSITION 21,12:? SC
680 SOUND 0,I*20+40,10,10:FOR W=1 TO 50:NEXT W:NEXT I
690 FOR I=P2 TO 1 STEP -1:SOUND 0,I*20+40,10,10:FOR W=1 TO 50:NEXT W:NEXT I:SOUND 0,0,0,0

; Bonus ship routine. Awards a bonus
; ship if all six people are rescued.

693 IF P2=6 THEN POSITION 10,16:? "";:SL=SL+1:FOR P2=1 TO 4:FOR AZ=80 TO 185 STEP 6
696 SOUND 0,AZ,10,10:SOUND 0,AZ+50,10,10:NEXT AZ:NEXT P2:FOR W=11 TO 111 STEP 5:FOR AZ=W TO W-7 STEP -1
699 SOUND 0,AZ,10,10:NEXT AZ:NEXT W:SOUND 0,0,0,0:GOTO 20

; Routine to alter the
; character set. First it loads the old
; character set from ROM starting at
; location 57344, writing it to RAM
; starting 2048 bytes or 8 pages from
; the top of memory. Then it POKEs
; the new characters from the data
; statements into the RAM of the new
; character set. This alters the lower·
; case characters a-i.

1000 R=PEEK(106)-8:RM=R*256
1010 C=0:FOR I=0 TO 1023 STEP 30:C=C+1:IF C=3 THEN C=0
1020 SETCOLOR C,1,8:FOR J=I TO I+30:POKE RM+J,PEEK(57344+J):NEXT J:SETCOLOR C,0,0:NEXT I:SETCOLOR 0,1,8
1030 FOR I=0 TO 8:FOR J=0 TO 7:READ A:POKE RM+(97+I)*8+J,A:NEXT J:NEXT I:RETURN

1040 . DATA FOR NEW CHARACTERS, IN  GROUPS OF 8
1050 DATA 0,0,12,12,12,15,15,12,24,24,24,60,255,255,255,0,0,0,48,48,48,240,240,48
1060 DATA 255,255,126,126,60,60,24,24,219,126,60,24,24,60,102,195,24,24,255,24,24,60,102,195
1070 DATA 24,24,60,126,219,60,102,195,48,48,48,112,240,240,240,0,12,12,12,14,15,15,15,0

; Draws opening display on the
; screen.

1100 GRAPHICS 3+16:FOR I=0 TO 2:SETCOLOR I,0,0:NEXT I
1105 C=0:FOR I=0 TO 39:C=C+1:IF C=4 THEN C=1
1110 COLOR C:PLOT I,0:PLOT 39-I,21:NEXT I
1120 C=0:FOR I=0 TO 21:C=C+1:IF C=4 THEN C=1
1130 COLOR C:PLOT 39,I:PLOT 0,21-I:NEXT I
1140 COLOR 1:PLOT 9,4:DRAWTO 5,4:DRAWTO 5,6:DRAWTO 9,6:DRAWTO 9,9:DRAWTO 5,9:PLOT 11,9:DRAWTO 11,4:DRAWTO 15,4
1142 DRAWTO 15,7:DRAWTO 11,7:PLOT 17,9:DRAWTO 17,4:DRAWTO 21,4:DRAWTO 21,9:PLOT 17,6:DRAWTO 21,6:PLOT 27,4
1144 DRAWTO 23,4:DRAWTO 23,9:DRAWTO 27,9:PLOT 33,4:DRAWTO 29,4:DRAWTO 29,9:DRAWTO 33,9:PLOT 29,6:DRAWTO 33,6
1150 PLOT 2,17:DRAWTO 2,12:DRAWTO 6,12:DRAWTO 6,15:DRAWTO 2,15:PLOT 5,16:PLOT 6,17:PLOT 12,12:DRAWTO 8,12
1152 DRAWTO 8,17:DRAWTO 12,17:PLOT 8,14:DRAWTO 12,14:PLOT 18,12:DRAWTO 14,12:DRAWTO 14,14:DRAWTO 18,14
1154 DRAWTO 18,17:DRAWTO 14,17:PLOT 24,12:DRAWTO 20,12:DRAWTO 20,17:DRAWTO 24,17:PLOT 26,12:DRAWTO 26,17
1156 DRAWTO 30,17:DRAWTO 30,12:PLOT 36,12:DRAWTO 32,12:DRAWTO 32,17:DRAWTO 36,17:PLOT 32,14:DRAWTO 36,14
1160 RETURN

9999 . MATT RUTTER, AT199, 8/7/81
