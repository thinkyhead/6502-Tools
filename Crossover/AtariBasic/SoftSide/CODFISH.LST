;
; At the Codfish Ball
;
; Softside Vol 7-02 Feb 1984
;

10 GOSUB 10500:GOSUB 11000:GOSUB 12000:GOSUB 13000:GOSUB 20000:HISCORE=0
20 FLAG=0:B=0:SCORE=0:BULLETS=300:GOSUB 10000

100 IF FLAG=0 THEN D=USR(ADR(MOVE$)):SOUND 2,10,12,6:SOUND 2,20,12,6:SOUND 2,30,12,6:SOUND 2,40,12,6:SOUND 2,0,0,0:GOTO 240
110 YP2=YP2-1:D=USR(ADR(UP$),PM+656)
120 IF YP2>0 THEN 160
130 PXP2=0:POKE 53249,PXP2:D=USR(ADR(JUMP$),PM+736,PM+656)
140 D=USR(ADR(JUMP$),PM+656,PM+640):FLAG=0:IF BULLETS=0 THEN 500
150 XP2=0:YP2=20:POKE 53278,0:GOTO 220
160 IF PEEK(53253)=0 THEN 220
170 PYP2=YP2*4+656:PXP2=0:POKE 53249,PXP2
180 D=USR(ADR(JUMP$),PM+736,PM+PYP2):D=USR(ADR(JUMP$),PM+PYP2,PM+640)
190 COLOR 32:PLOT XP2,YP2:PLOT XP2,YP2+1:PLOT XP2-1,YP2:PLOT XP2-1,YP2+1:PLOT XP2+1,YP2:PLOT XP2+1,YP2+1
195 FOR W=1 TO 10:SOUND 0,W*10,8,8:NEXT W:SOUND 0,0,0,0
200 XP2=0:YP2=20:FLAG=0:SCORE=SCORE+10:POSITION 15,0:? SCORE;:POKE 53278,0
210 HITS=HITS+1:IF HITS=72 THEN 300
215 IF BULLETS=0 THEN 500
220 D=USR(ADR(MOVE$)):POKE 53278,0:IF PEEK(53253)<>0 THEN 170
230 GOTO 100

240 IF STRIG(0)=1 THEN 100
250 POKE 77,0:FLAG=1:PXP2=PEEK(1662)+4:XP2=INT((PXP2-48)/4)
260 POKE 53249,PXP2:BULLETS=BULLETS-1:POSITION 5,0:? BULLETS;" ";:GOTO 110
300 B=B+1:BULLETS=300-10*B:IF B>12 THEN B=12
310 GOSUB 2200:HITS=0:GOSUB 10005:GOTO 100
500 GOSUB 2200:POSITION 5,15:? "GAME OVER.  TO PLAY AGAIN"
510 POSITION 5,16:? "PRESS FIRE BUTTON":IF SCORE>HISCORE THEN HISCORE=SCORE
520 POSITION 5,17:? "HIGH SCORE SO FAR IS ";HISCORE
530 IF STRIG(0)=1 THEN 530
540 FLAG=0:B=0:SCORE=0:BULLETS=300:GOSUB 2200:GOSUB 10005:GOTO 100
2000 READ BYTE$:A1=ASC(BYTE$)-48:IF A1>10 THEN A1=A1-7
2010 A2=ASC(BYTE$(2,2))-48:IF A2>10 THEN A2=A2-7
2020 A$=CHR$(A1*16+A2):RETURN
2100 FOR J=0 TO 3:A2=INT(A1/256):A3=A1-A2*256:POKE A,A2:POKE A+1,A3
2120 A=A+3:A1=A1+80:NEXT J:RETURN
2200 COLOR 32:FOR J=1 TO 23:PLOT 1,J:DRAWTO 39,J:NEXT J:POSITION 0,0:RETURN
10000 DIM Z$(1)
10005 FOR LINE=2 TO 16 STEP 2:Z$=CHR$(LINE/2-1):FOR COLUMN=3 TO 36 STEP 4
10010 POSITION COLUMN,LINE:? Z$
10020 NEXT COLUMN:NEXT LINE:RESTORE 10100+B:FOR J=1 TO 8:READ A:POKE 1663+J*3,A:NEXT J
10030 POSITION 0,0:? "AMMO    ";BULLETS;" SCORE      ";SCORE:. + SIGNS ARE ESC CTRL-RIGHT ARROW
10050 RETURN

10100 DATA 0,2,0,2,0,2,0,2
10101 DATA 0,2,0,2,0,2,1,2
10102 DATA 0,2,0,2,1,2,1,2
10103 DATA 0,2,1,2,1,2,1,2
10104 DATA 1,2,1,2,1,2,1,2
10105 DATA 0,2,0,2,0,2,0,3
10106 DATA 0,2,0,2,0,3,0,3
10107 DATA 0,2,0,3,0,3,0,3
10108 DATA 0,3,0,3,0,3,0,3
10109 DATA 0,3,0,3,0,3,1,3
10110 DATA 0,3,0,3,1,3,1,3
10111 DATA 0,3,1,3,1,3,1,3
10112 DATA 1,3,1,3,1,3,1,3

10500 RESTORE 10510:FOR I=1536 TO 1611:READ A:POKE I,A:NEXT I
10510 DATA 104,173,34,2,141,74
10520 DATA 6,173,35,2,141,75
10530 DATA 6,169,6,162,6,160
10540 DATA 23,32,92,228,96,24
10550 DATA 173,126,6,141,0,208
10560 DATA 173,124,2,208,6,206
10570 DATA 126,6,206,126,6,173
10580 DATA 125,2,208,6,238,126
10590 DATA 6,238,126,6,173,126
10600 DATA 6,201,48,176,5,169
10610 DATA 192,141,126,6,201,193
10620 DATA 144,5,169,50,141,126
10630 DATA 6,76,73,6
10640 IF PEEK(547)<>6 THEN DUM=USR(1536)
10650 RETURN

11000 GRAPHICS 21:POKE 752,1:POKE 87,0:C=0:RESTORE 11160
11010 DL=PEEK(560)+256*PEEK(561)+4
11020 MEM=PEEK(DL)+256*PEEK(DL+1)+40
11030 MH=INT(MEM/256):ML=MEM-MH*256
11040 POKE DL-1,198:POKE DL+2,66:POKE DL+3,ML:POKE DL+4,MH
11050 FOR J=5 TO 26:POKE DL+J,2:NEXT J
11060 FOR J=5 TO 19 STEP 2:POKE DL+J,130:NEXT J
11070 POKE DL+27,65
11080 POKE DL+28,PEEK(560)
11090 POKE DL+29,PEEK(561)
11100 READ A:IF A=999 THEN 11120
11110 POKE 1744+C,A:C=C+1:GOTO 11100
11120 POKE 512,208:POKE 513,6
11130 POKE 1774,98:POKE 1775,114:POKE 1776,130:POKE 1777,146:POKE 1778,162:POKE 1779,178:POKE 1780,194
11140 POKE 1781,98:POKE 1782,114
11150 POKE 1783,0:POKE 54286,192
11160 DATA 72,138,72,174,247,6,189,238,6,141,10,212,141,24,208,232
11170 DATA 224,9,144,2,162,0,138,141
11180 DATA 247,6,104,170,104,64,999
11190 POSITION 0,0:? "INITIALIZING":RETURN
12000 A=PEEK(106)-8:POKE 54279,A:PM=256*A:POKE 106,A:POKE 623,0
12010 POKE 559,46:POKE 53277,3:POKE 704,8:POKE 705,0
12020 FOR I=PM+512 TO PM+768:POKE I,0:NEXT I
12030 FOR J=PM+612 TO PM+620:READ A:POKE J,A:NEXT J
12040 DATA 60,102,102,60,153,126,24,24,60
12050 PXP1=100:POKE 53248,PXP1:POKE 1662,PXP1
12060 FOR J=PM+736 TO PM+739:READ A:POKE J,A:NEXT J
12070 DATA 192,192,192,192
12080 PXP2=0:POKE 53249,PXP2:YP2=20
12090 RETURN
13000 DIM MOVE$(200),BYTE$(2),A$(40),UP$(28),DOWN$(28),JUMP$(26):FOR J=1 TO 171:GOSUB 2000:MOVE$(J,J)=A$:NEXT J
13010 SC=PEEK(88)+PEEK(89)*256:A=1664
13020 A1=SC+2+80:GOSUB 2100
13030 A1=SC+2+40*10:GOSUB 2100
13040 POKE A,0
13045 DATA D8,A9,80,85,CD,A9,06,85,CE
13050 DATA 38,B0,3D,60,A0,00,B1,CB
13055 DATA 48,A2,25,C8,B1,CB,88,91
13060 DATA CB,C8,CA,D0,F6,68,A0,25
13065 DATA 91,CB,38,B0,27,A0,00,B1
13070 DATA CB,48,C8,B1,CB,48,A2,24
13075 DATA C8,B1,CB,88,88,91,CB,C8
13080 DATA C8,CA,D0,F4,68,A0,25,91
13085 DATA CB,68,88,91,CB,38,B0,04
13090 DATA D8,68,C6,CD,E6,CD,A0,00
13095 DATA B1,CD,F0,B7,85,CC,E6,CD
13100 DATA B1,CD,85,CB,E6,CD,B1,CD,F0,0C
13105 DATA C9,01,EA,F0,20,C9,02,EA
13110 DATA F0,A0,D0,B7,A0,25,B1,CB
13115 DATA 48,A2,25,88,B1,CB,C8,91
13120 DATA CB,88,CA,D0,F6,68,A0,00
13125 DATA 91,CB,38,B0,C5,A0,25,B1
13130 DATA CB,48,88,B1,CB,48,A2,24
13140 DATA 88,B1,CB,C8,C8,91,CB,88,88,CA
13145 DATA D0,F4,68,A0,00,91,CB,68
13150 DATA C8,91,CB,38,B0,A2
13200 FOR J=1 TO 28:GOSUB 2000:UP$(J,J)=A$:NEXT J
13210 DATA 68,68,85,CC,68,85,CB,A2
13220 DATA 60,A0,00,C8,C8,C8,C8,B1
13230 DATA CB,88,88,88,88,91,CB,C8
13240 DATA CA,D0,F0,60
13300 DOWN$=UP$:DOWN$(11,11)=CHR$(94):FOR J=12 TO 15:DOWN$(J,J)=CHR$(136):NEXT J
13310 FOR J=18 TO 21:DOWN$(J,J)=CHR$(200):NEXT J:DOWN$(24,24)=CHR$(136)
13320 FOR J=1 TO 25:READ AA:JUMP$(J,J)=CHR$(AA):NEXT J:RETURN
13330 DATA 104,104,133,204,104,133,203,104,133,207,104,133,206,160,0,177,206,145,203,200,192,8,208,247,96
20000 POKE 106,PEEK(106)-5:START=(PEEK(106)+1)*256:POKE 756,START/256:POKE 752,1
20010 DIM XFR$(38):XFR$="hji":. See Documentation
20020 Z=USR(ADR(XFR$)):RESTORE 20050
20030 READ X:IF X=-1 THEN RESTORE :RETURN
20040 FOR Y=0 TO 7:READ Z:POKE X+Y+START,Z:NEXT Y:GOTO 20030
20050 DATA 512,27,14,38,118,254,254,120,255
20060 DATA 520,80,32,32,32,115,251,223,255
20070 DATA 528,0,4,103,148,146,146,146,140
20080 DATA 536,255,246,252,184,248,228,194,129
20090 DATA 544,224,188,192,198,201,201,199,126
20100 DATA 552,248,160,230,152,24,103,4,4
20110 DATA 560,0,0,12,222,123,222,12,0
20120 DATA 568,8,24,56,254,19,2,0,0
20130 DATA -1
